# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: telemetry.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0ftelemetry.proto\"\xe2\x08\n\x10TelemetryMessage\x12\x10\n\x08\x64\x65viceId\x18\x01 \x01(\t\x12\r\n\x05Track\x18\x02 \x01(\t\x12\x0e\n\x06update\x18\x03 \x01(\x08\x12\r\n\x05valid\x18\x04 \x01(\x08\x12\x15\n\rrealTimeStamp\x18\x05 \x01(\r\x12\x15\n\rrealTimeMilli\x18\x06 \x01(\r\x12\x0c\n\x04ping\x18\x07 \x01(\r\x12\x0c\n\x04iTOW\x18\x08 \x01(\r\x12\x0c\n\x04\x64Tow\x18\t \x01(\r\x12\x14\n\x0c\x64TowOriginal\x18\n \x01(\r\x12\x15\n\rdTowCalibFlag\x18\x0b \x01(\x08\x12\x10\n\x08\x66lagsRaw\x18\x0c \x01(\r\x12\r\n\x05\x66lags\x18\r \x01(\r\x12\x11\n\tcalibFlag\x18\x0e \x01(\x08\x12\x0f\n\x07\x66ixType\x18\x0f \x01(\r\x12\x0c\n\x04pDOP\x18\x10 \x01(\r\x12\x0c\n\x04hAcc\x18\x11 \x01(\r\x12\r\n\x05numSV\x18\x12 \x01(\r\x12\x0e\n\x06numSat\x18\x13 \x01(\r\x12\r\n\x05LapNo\x18\x14 \x01(\r\x12\x0e\n\x06LapCur\x18\x15 \x01(\x02\x12\x0f\n\x07LapPrev\x18\x16 \x01(\x02\x12\x14\n\x0cprevLapValid\x18\x17 \x01(\x08\x12\x0e\n\x06SectNo\x18\x18 \x01(\r\x12\x10\n\x08SectTime\x18\x19 \x03(\x02\x12\x14\n\x0cprevSectTime\x18\x1a \x03(\x02\x12\x15\n\rprevSectValid\x18\x1b \x03(\x08\x12\x11\n\tFastLapNo\x18\x1c \x01(\r\x12\x11\n\tFastLapTm\x18\x1d \x01(\x02\x12\x11\n\tDeltaTime\x18\x1e \x01(\x02\x12\x15\n\rPositionIndex\x18\x1f \x01(\x02\x12\x11\n\tPosLocalX\x18  \x01(\x02\x12\x11\n\tPosLocalY\x18! \x01(\x02\x12\x0e\n\x06gSpeed\x18\" \x01(\x02\x12\x0f\n\x07headMot\x18# \x01(\x02\x12\r\n\x05Speed\x18$ \x01(\x02\x12\x18\n\x07SpeedUL\x18% \x03(\x0b\x32\x07.MinMax\x12\x0f\n\x07OffDist\x18& \x01(\x02\x12\x0b\n\x03lat\x18( \x01(\x02\x12\x0b\n\x03lon\x18) \x01(\x02\x12\x0e\n\x06height\x18* \x01(\x02\x12\x0f\n\x07\x41\x63\x63\x65lXr\x18+ \x01(\x02\x12\x0f\n\x07\x41\x63\x63\x65lYr\x18, \x01(\x02\x12\x0f\n\x07\x41\x63\x63\x65lZr\x18- \x01(\x02\x12\x13\n\x0b\x41ngleRateXr\x18. \x01(\x02\x12\x13\n\x0b\x41ngleRateYr\x18/ \x01(\x02\x12\x13\n\x0b\x41ngleRateZr\x18\x30 \x01(\x02\x12\x12\n\nDeviceTemp\x18\x32 \x01(\x02\x12\x0e\n\x06\x41\x63\x63\x65lX\x18\x33 \x01(\x02\x12\x0e\n\x06\x41\x63\x63\x65lY\x18\x34 \x01(\x02\x12\x0e\n\x06\x41\x63\x63\x65lZ\x18\x35 \x01(\x02\x12\x12\n\nAngleRateX\x18\x36 \x01(\x02\x12\x12\n\nAngleRateY\x18\x37 \x01(\x02\x12\x12\n\nAngleRateZ\x18\x38 \x01(\x02\x12\x12\n\ncarBattery\x18Z \x01(\x02\x12\x15\n\rdeviceBattery\x18[ \x01(\x02\x12-\n\x06\x63\x61nMsg\x18\x64 \x03(\x0b\x32\x1d.TelemetryMessage.CanMsgEntry\x1a-\n\x0b\x43\x61nMsgEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"\"\n\x06MinMax\x12\x0b\n\x03min\x18\x01 \x01(\x02\x12\x0b\n\x03max\x18\x02 \x01(\x02\x62\x06proto3')



_TELEMETRYMESSAGE = DESCRIPTOR.message_types_by_name['TelemetryMessage']
_TELEMETRYMESSAGE_CANMSGENTRY = _TELEMETRYMESSAGE.nested_types_by_name['CanMsgEntry']
_MINMAX = DESCRIPTOR.message_types_by_name['MinMax']
TelemetryMessage = _reflection.GeneratedProtocolMessageType('TelemetryMessage', (_message.Message,), {

  'CanMsgEntry' : _reflection.GeneratedProtocolMessageType('CanMsgEntry', (_message.Message,), {
    'DESCRIPTOR' : _TELEMETRYMESSAGE_CANMSGENTRY,
    '__module__' : 'telemetry_pb2'
    # @@protoc_insertion_point(class_scope:TelemetryMessage.CanMsgEntry)
    })
  ,
  'DESCRIPTOR' : _TELEMETRYMESSAGE,
  '__module__' : 'telemetry_pb2'
  # @@protoc_insertion_point(class_scope:TelemetryMessage)
  })
_sym_db.RegisterMessage(TelemetryMessage)
_sym_db.RegisterMessage(TelemetryMessage.CanMsgEntry)

MinMax = _reflection.GeneratedProtocolMessageType('MinMax', (_message.Message,), {
  'DESCRIPTOR' : _MINMAX,
  '__module__' : 'telemetry_pb2'
  # @@protoc_insertion_point(class_scope:MinMax)
  })
_sym_db.RegisterMessage(MinMax)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TELEMETRYMESSAGE_CANMSGENTRY._options = None
  _TELEMETRYMESSAGE_CANMSGENTRY._serialized_options = b'8\001'
  _TELEMETRYMESSAGE._serialized_start=20
  _TELEMETRYMESSAGE._serialized_end=1142
  _TELEMETRYMESSAGE_CANMSGENTRY._serialized_start=1097
  _TELEMETRYMESSAGE_CANMSGENTRY._serialized_end=1142
  _MINMAX._serialized_start=1144
  _MINMAX._serialized_end=1178
# @@protoc_insertion_point(module_scope)
